/**
Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231,  231 − 1]. 
For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.
**/



class Solution {
    public int reverse(int x) {
       
       String num = x +"";
       String newNum ="";
       for(int i=num.length()-1; i>=0;i--){
            if(num.charAt(i)!= '-'){
                newNum += num.charAt(i);
            }
            
        }
        
        try{
            int mouse = Integer.parseInt(newNum);
        }
        catch (Exception e) {
         return 0;
        }
        if(x<0){
           int cat = Integer.parseInt(newNum);
           return (-1*cat);
       }
        
        int finalNum = Integer.parseInt(newNum);
        return finalNum;
        
        
        
    }
}
